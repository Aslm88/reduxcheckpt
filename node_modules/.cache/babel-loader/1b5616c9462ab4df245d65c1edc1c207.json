{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\Redux checkpt\\\\reduxtodoapp\\\\src\\\\components\\\\todoItem.js\";\nimport React, { UseRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = props => {\n  const {\n    item,\n    updateTodo,\n    removeTodo,\n    completeTodo\n  } = props;\n\n  const changeFocus = () => {\n    inputRef.current.disabled = false;\n    inputRef.current.focus();\n  };\n\n  const update = (id, value, e) => {\n    if (e.which === 13) {\n      updateTodo({\n        id,\n        item: value\n      });\n      inputRef.current.disabled = true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: inputRef,\n      disabled: inputRef,\n      defaultValue: item.item,\n      onKeyPress: e => update(item.id, inputRef.current.value, e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeFocus(),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => completeTodo(item.id),\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeTodo(item.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }, this), \" \"]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/Redux checkpt/reduxtodoapp/src/components/todoItem.js"],"names":["React","UseRef","TodoItem","props","item","updateTodo","removeTodo","completeTodo","changeFocus","inputRef","current","disabled","focus","update","id","value","e","which"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA2B,OAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,UAAN;AAAiBC,IAAAA,UAAjB;AAA4BC,IAAAA;AAA5B,MAA2CJ,KAAjD;;AAGC,QAAMK,WAAW,GAAG,MAAM;AACtBC,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,QAAjB,GAA2B,KAA3B;AACAF,IAAAA,QAAQ,CAACC,OAAT,CAAiBE,KAAjB;AACH,GAHD;;AAKA,QAAMC,MAAM,GAAG,CAACC,EAAD,EAAIC,KAAJ,EAAUC,CAAV,KAAe;AAE3B,QAAIA,CAAC,CAACC,KAAF,KAAY,EAAhB,EAAmB;AACfZ,MAAAA,UAAU,CAAC;AAAES,QAAAA,EAAF;AAAMV,QAAAA,IAAI,EAAEW;AAAZ,OAAD,CAAV;AACAN,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,QAAjB,GAA4B,IAA5B;AACH;AACH,GAND;;AAOD,sBACI;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA,4BACoB;AACC,MAAA,GAAG,EAAEF,QADN;AAEC,MAAA,QAAQ,EAAEA,QAFX;AAGC,MAAA,YAAY,EAAEL,IAAI,CAACA,IAHpB;AAIC,MAAA,UAAU,EAAGY,CAAD,IAAOH,MAAM,CAACT,IAAI,CAACU,EAAN,EAAUL,QAAQ,CAACC,OAAT,CAAiBK,KAA3B,EAAkCC,CAAlC;AAJ1B;AAAA;AAAA;AAAA;AAAA,YADpB,eAQoB;AAAQ,MAAA,OAAO,EAAE,MAAIR,WAAW,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARpB,eASoB;AAAQ,MAAA,OAAO,EAAE,MAAID,YAAY,CAACH,IAAI,CAACU,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATpB,eAWoB;AAAQ,MAAA,OAAO,EAAE,MAAIR,UAAU,CAACF,IAAI,CAACU,EAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXpB,EAYwC,GAZxC;AAAA,KAASV,IAAI,CAACU,EAAd;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAhCD;;KAAMZ,Q;AAkCF,eAAeA,QAAf","sourcesContent":["import React, {UseRef}from 'react';\r\n\r\nconst TodoItem = (props) => {\r\n    const {item,updateTodo,removeTodo,completeTodo}= props;\r\n    \r\n\r\n     const changeFocus = () => {\r\n         inputRef.current.disabled =false;\r\n         inputRef.current.focus();\r\n     }\r\n\r\n     const update = (id,value,e)=> {\r\n\r\n        if (e.which === 13){\r\n            updateTodo({ id, item: value});\r\n            inputRef.current.disabled = true;\r\n        }\r\n     };\r\n    return (\r\n        <li key={item.id} className=\"card\">\r\n                            <textarea \r\n                             ref={inputRef} \r\n                             disabled={inputRef}\r\n                             defaultValue={item.item}\r\n                             onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\r\n                             />\r\n                            \r\n                            <button onClick={()=>changeFocus()}>Edit</button> \r\n                            <button onClick={()=>completeTodo(item.id)}>\r\n                                Done</button>\r\n                            <button onClick={()=>removeTodo(item.id)}>\r\n                                Delete</button>{\" \"}\r\n                            </li>\r\n    )\r\n}\r\n\r\n    export default TodoItem;\r\n"]},"metadata":{},"sourceType":"module"}
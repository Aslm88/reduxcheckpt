[{"C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\index.js":"1","C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\App.js":"2","C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\reportWebVitals.js":"3","C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\components\\Todos.js":"4","C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\redux\\store.js":"5","C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\redux\\reducer.js":"6","C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\components\\DisplayTodos.js":"7","C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\components\\todoItem.js":"8"},{"size":625,"mtime":1624035629681,"results":"9","hashOfConfig":"10"},{"size":271,"mtime":1624060056296,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1468,"mtime":1624059960171,"results":"13","hashOfConfig":"10"},{"size":177,"mtime":1624034731809,"results":"14","hashOfConfig":"10"},{"size":1459,"mtime":1624046154729,"results":"15","hashOfConfig":"10"},{"size":3181,"mtime":1624057833614,"results":"16","hashOfConfig":"10"},{"size":1459,"mtime":1624059916258,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vykjpv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\index.js",[],"C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\App.js",[],"C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\reportWebVitals.js",[],["36","37"],"C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\components\\Todos.js",["38"],"import React, { useRef, useState } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { addTodos, completeTodos, removeTodos, updateTodos } from '../redux/reducer';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state ,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addTodo: (obj) => dispatch (addTodos(obj)),\r\n        removeTodo: (id) => dispatch (removeTodos(id)),\r\n        updateTodo: (obj) => dispatch (updateTodos(obj)),\r\n        completeTodo: (id) => dispatch (completeTodos(id)),\r\n    };\r\n};\r\n\r\nconst Todos = (props) => {\r\n\r\n     const [todo, setTodo] = useState(\"\");\r\n\r\n     \r\n\r\n     const handleChange = (e) =>{\r\n         setTodo (e.target.value);\r\n     };\r\n     useState(\"todo text\");\r\n     console.log(\"props from \", props);\r\n\r\n    return (\r\n        <div className=\"addTodos\">\r\n          <input \r\n             type=\"text\"\r\n             onChange={(e)=>handleChange(e)} \r\n             className=\"todo-input\"\r\n             />\r\n\r\n          <button \r\n             className=\"add-btn\" \r\n             onClick={()=>\r\n               props.addTodo({\r\n                   id: Math.floor(Math.random() * 1000),\r\n                   item: todo,\r\n                   completed: false,\r\n               }) \r\n              }\r\n              >\r\n                  Add\r\n          </button>\r\n         \r\n          \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Todos) ;\r\n","C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\redux\\store.js",[],"C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\redux\\reducer.js",[],"C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\components\\DisplayTodos.js",[],"C:\\Users\\Ahmed\\Desktop\\Redux checkpt\\reduxtodoapp\\src\\components\\todoItem.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":23},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]